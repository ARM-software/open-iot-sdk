diff --git a/libraries/3rdparty/tinycbor/src/compilersupport_p.h b/libraries/3rdparty/tinycbor/src/compilersupport_p.h
index 0879801..5d683ef 100644
--- a/libraries/3rdparty/tinycbor/src/compilersupport_p.h
+++ b/libraries/3rdparty/tinycbor/src/compilersupport_p.h
@@ -44,7 +44,7 @@
 #  include <stdbool.h>
 #endif

-#if __STDC_VERSION__ >= 201112L || (defined(__cplusplus) && __cplusplus >= 201103L) || (defined(__cpp_static_assert) && __cpp_static_assert >= 200410)
+#if __STDC_VERSION__ > 201112L || (defined(__cplusplus) && __cplusplus >= 201103L) || (defined(__cpp_static_assert) && __cpp_static_assert >= 200410)
 #  define cbor_static_assert(x)         static_assert(x, #x)
 #elif !defined(__cplusplus) && defined(__GNUC__) && (__GNUC__ * 100 + __GNUC_MINOR__ >= 406) && (__STDC_VERSION__ > 199901L)
 #  define cbor_static_assert(x)         _Static_assert(x, #x)
diff --git a/libraries/3rdparty/tinycbor/src/open_memstream.c b/libraries/3rdparty/tinycbor/src/open_memstream.c
index 3365378..6765e63 100644
--- a/libraries/3rdparty/tinycbor/src/open_memstream.c
+++ b/libraries/3rdparty/tinycbor/src/open_memstream.c
@@ -26,25 +26,25 @@
 #define _DEFAULT_SOURCE 1
 #define _GNU_SOURCE 1

-#include <sys/types.h>
+//#include <sys/types.h>
 #include <errno.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>

-#if defined(__unix__) || defined(__APPLE__)
-#  include <unistd.h>
-#endif
-#ifdef __APPLE__
+// #if defined(__unix__) || defined(__APPLE__)
+// #  include <unistd.h>
+// #endif
+// #ifdef __APPLE__
 typedef int RetType;
 typedef int LenType;
-#elif __linux__
-typedef ssize_t RetType;
-typedef size_t LenType;
-#else
-#  error "Cannot implement open_memstream!"
-#endif
-
+// #elif __linux__
+// typedef int RetType;
+// typedef int LenType;
+// #else
+// #  error "Cannot implement open_memstream!"
+// #endif
+#define	EFBIG		27	/* File too large */
 #include "compilersupport_p.h"

 struct Buffer
@@ -54,40 +54,6 @@ struct Buffer
     size_t alloc;
 };

-static RetType write_to_buffer(void *cookie, const char *data, LenType len)
-{
-    struct Buffer *b = (struct Buffer *)cookie;
-    char *ptr = *b->ptr;
-    size_t newsize;
-
-    errno = EFBIG;
-    if (unlikely(add_check_overflow(*b->len, len, &newsize)))
-        return -1;
-
-    if (newsize >= b->alloc) { // NB! one extra byte is needed to avoid buffer overflow at close_buffer
-        // make room
-        size_t newalloc = newsize + newsize / 2 + 1;    // give 50% more room
-        ptr = realloc(ptr, newalloc);
-        if (ptr == NULL)
-            return -1;
-        b->alloc = newalloc;
-        *b->ptr = ptr;
-    }
-
-    memcpy(ptr + *b->len, data, len);
-    *b->len = newsize;
-    return len;
-}
-
-static int close_buffer(void *cookie)
-{
-    struct Buffer *b = (struct Buffer *)cookie;
-    if (*b->ptr)
-        (*b->ptr)[*b->len] = '\0';
-    free(b);
-    return 0;
-}
-
 FILE *open_memstream(char **bufptr, size_t *lenptr)
 {
     struct Buffer *b = (struct Buffer *)malloc(sizeof(struct Buffer));
@@ -109,6 +75,8 @@ FILE *open_memstream(char **bufptr, size_t *lenptr)
         close_buffer
     };
     return fopencookie(b, "w", vtable);
+#else
+    return NULL;
 #endif
 }
